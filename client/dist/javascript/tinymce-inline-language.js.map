{"version":3,"sources":["tinymce-inline-language.js"],"names":["tinymce","create","init","editor","url","config","this","getConfig","locales","length","currentLocale","getCookie","self","forEach","locale","code","addButton","text","title","getLang","onclick","setInlineLanguage","selection","textSelection","getContent","selectedLocale","currentDir","directionality","dir","node","getNode","getAttribute","inner","innerHTML","dom","remove","setContent","replace","window","ss","sections","find","next","name","inlinelanguages","v","document","cookie","match","PluginManager","add","plugins","tinymce_inline_language"],"mappings":"AAEAA,QAAAC,OAAA,0CAAA,CAKAC,KAAA,SAAAC,OAAAC,KAGA,IAAAC,OAAAC,KAAAC,YACA,QAAA,IAAAF,OAAAG,SAAA,IAAAH,OAAAG,QAAAC,OAAA,CAKA,IAAAC,cAAAJ,KAAAK,UAAA,oBAGAC,KAAAN,KACAD,OAAAG,QAAAK,QAAA,SAAAC,QACAA,OAAAC,MAAAL,eACAP,OAAAa,UAAA,2BAAAF,OAAAC,KAAA,CACAE,KAAAH,OAAAI,MACAA,MAAAf,OAAAgB,QAAA,kCAAA,sCACAC,QAAA,WAAAR,KAAAS,kBAAAlB,OAAAW,OAAAC,aAOAM,kBAAA,SAAAlB,OAAAY,MAEA,QAAA,IAAAZ,OAAAmB,UAAA,CACA,IAAAC,cAAApB,OAAAmB,UAAAE,aACA,GAAA,EAAAD,cAAAd,OAAA,CAGA,IAAAJ,OAAAC,KAAAC,YACA,QAAA,IAAAF,OAAAG,SAAA,IAAAH,OAAAG,QAAAC,OACA,OAIA,IAAAgB,gBAAA,EAMA,GALApB,OAAAG,QAAAK,QAAA,SAAAC,QACAA,OAAAC,MAAAA,OACAU,eAAAX,WAGAW,eAAA,OAGA,IAAAC,WAAAvB,OAAAwB,eAGAA,eAAA,GACAF,eAAAG,KAAAF,aACAC,eAAA,SAAAF,eAAAG,IAAA,KAIA,IAAAC,KAAA1B,OAAAmB,UAAAQ,UACA,GAAAD,MAAAA,KAAAE,aAAA,QAAA,CAEA,IAAAC,MAAAH,KAAAI,UACA9B,OAAA+B,IAAAC,OAAAN,MACA1B,OAAAmB,UAAAc,WAAAJ,YAGAT,cAAAA,cAAAc,QAAA,gDAAA,MAEAlC,OAAAmB,UAAAc,WAAA,eAAAX,eAAAV,KAAA,oBAAAU,eAAAP,MAAA,IAAAS,eAAA,IAAAJ,cAAA,cAQAhB,UAAA,WAEA,GAAA+B,QACAA,OAAAC,IACAD,OAAAC,GAAAlC,QACAiC,OAAAC,GAAAlC,OAAAmC,SACA,CACA,IAAAnC,OAAAiC,OAAAC,GAAAlC,OAAAmC,SAAAC,KAAA,SAAAC,MACA,MAPA,qCAOAA,KAAAC,OAEA,GAAAtC,OACA,OAAAA,OAAAuC,iBAAA,GAGA,MAAA,IAGAjC,UAAA,SAAAgC,MACA,IAAAE,EAAAC,SAAAC,OAAAC,MAAA,UAAAL,KAAA,iBACA,OAAAE,EAAAA,EAAA,GAAA,QAMA7C,QAAAiD,cAAAC,IAAA,iCAAAlD,QAAAmD,QAAAC","file":"tinymce-inline-language.js","sourcesContent":["( function() {\n\n    tinymce.create( 'tinymce.plugins.tinymce_inline_language', {\n        /**\n         * @param {tinymce.Editor} editor Editor instance that the plugin is initialized in.\n         * @param {string} url Absolute URL to where the plugin is located.\n         */\n        init : function( editor, url ) {\n        \t\n        \t// Skip if no locales defined\n\t\t\tvar config = this.getConfig();\n\t\t\tif (typeof config.locales === 'undefined' || config.locales.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// get current locale\n\t\t\tvar currentLocale = this.getCookie('FluentLocale_CMS');\n\n\t        // add buttons\n\t\t\tvar self = this;\n\t\t\tconfig.locales.forEach(function(locale) {\n\t\t\t\tif (locale.code != currentLocale) {\n\t\t            editor.addButton( 'tinymce-inline-language-' + locale.code, {\n\t\t            \ttext: locale.title,\n\t\t                title: editor.getLang( 'tinymce_inline_language.tooltip', 'Set language for current selection' ),\n\t\t                onclick: function() { self.setInlineLanguage(editor, locale.code) }\n\t\t            });\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n        },\n        \n\t\tsetInlineLanguage: function(editor, code) {\n\t\t\t// check if text is selected\n\t\t\tif (typeof editor.selection != 'undefined') {\n\t\t\t\tvar textSelection = editor.selection.getContent();\n\t\t\t\tif (textSelection.length > 0) {\n\t\t\t\t\t\n\t\t\t\t\t// Skip if no locales defined\n\t\t\t\t\tvar config = this.getConfig();\n\t\t\t\t\tif (typeof config.locales === 'undefined' || config.locales.length === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// get values for selected language\n\t\t\t\t\tvar selectedLocale = false;\n\t\t\t\t\tconfig.locales.forEach(function(locale) {\n\t\t\t\t\t\tif (locale.code == code) {\n\t\t\t\t\t\t\tselectedLocale = locale;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!selectedLocale) return;\n\t\t\t\t\t\n\t\t\t\t\t// get current direction and locale\n\t\t\t\t\tvar currentDir = editor.directionality;\n\t\t\t\t\t\n\t\t\t\t\t// get directionality attribute\n\t\t\t\t\tvar directionality = '';\n\t\t\t\t\tif (selectedLocale.dir != currentDir) {\n\t\t\t\t\t\tdirectionality = ' dir=\"' + selectedLocale.dir + '\"';\n\t\t\t\t\t}\n\n\t\t\t\t\t// get parent node of current selection\n\t\t\t\t\tvar node = editor.selection.getNode();\n\t\t\t\t\tif (node && node.getAttribute('lang')) {\n\t\t\t\t\t\t// if parent node has lang attribute, remove the node and replace with inner text\n\t\t\t\t\t\tvar inner = node.innerHTML;\n\t\t\t\t\t\teditor.dom.remove(node);\n\t\t\t\t\t\teditor.selection.setContent(inner);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// remove any spans with lang attributes in the selected text\n\t\t\t\t\t\ttextSelection = textSelection.replace(/<span[^>]*lang=\\\".+\\\"[^>]*>([\\s\\S]*?)<\\/span>/, '$1');\n\t\t\t\t\t\t// add new surrounding span\n\t\t\t\t\t\teditor.selection.setContent('<span lang=\"' + selectedLocale.code + '\" data-language=\"' + selectedLocale.title + '\"' + directionality + '>' + textSelection + '</span>');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n        \t\n        },\n\n        getConfig: function() {\n\t\t\tvar section = 'SilverStripe\\\\Admin\\\\LeftAndMain';\n\t\t\tif (window\n\t\t\t\t&& window.ss\n\t\t\t    && window.ss.config\n\t\t\t    && window.ss.config.sections\n\t\t\t) {\n\t\t\t\tvar config = window.ss.config.sections.find(function (next) {\n\t\t\t\t\treturn next.name === section;\n\t\t\t\t});\n\t\t\t    if (config) {\n\t\t\t    \treturn config.inlinelanguages || {};\n\t\t\t    }\n\t\t\t}\n\t\t\treturn {};\n        },\n        \n        getCookie: function(name) {\n    \t    var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n    \t    return v ? v[2] : null;\n    \t}\n\n    } );\n\n    // Register plugin\n    tinymce.PluginManager.add( 'tinymce_inline_language_plugin', tinymce.plugins.tinymce_inline_language );\n} )();\n"]}